---
- name: Import host_vars in netbox
  connection: local
  hosts: localhost
  gather_facts: false

  vars:
    netbox_token: "{{ lookup('file', '/run/secrets/NETBOX_TOKEN') }}"
    netbox_url: "{{ lookup('env', 'NETBOX_API') }}"

    regex: >-
      ^([^\.]*).*
    regex_2: >-
      \1

  tasks:
    - name: Pause play until netbox is reachable from this host
      ansible.builtin.uri:
        url: "{{ netbox_url }}/api/"
        follow_redirects: none
        method: GET
        validate_certs: false
      register: result
      until: result.status == 200
      retries: 720
      delay: 5

    - name: Check inventory host_vars file with long hostnames
      ansible.builtin.stat:
        path: "/inventory/host_vars/{{ item }}.yml"
      register: results
      loop: "{{ groups['generic'] }}"
      when: "item != 'localhost'"
      ignore_errors: true

    - name: Create local config context
      netbox.netbox.netbox_device:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        validate_certs: false
        data:
          name: "{{ item.item | basename | regex_replace(regex, regex_2) }}"
          local_context_data: "{{ lookup('file', item.stat.path) | from_yaml }}"
      loop: "{{ results.results }}"
      when: item.stat.exists

    - name: Check inventory host_vars file with short hostnames
      ansible.builtin.stat:
        path: "/inventory/host_vars/{{ hostvars[item]['inventory_hostname_short'] }}.yml"
      register: results
      loop: "{{ groups['generic'] }}"
      when: "item != 'localhost'"
      ignore_errors: true

    - name: Create local config context
      netbox.netbox.netbox_device:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        validate_certs: false
        data:
          name: "{{ item.item | basename | regex_replace(regex, regex_2) }}"
          local_context_data: "{{ lookup('file', item.stat.path) | from_yaml }}"
      loop: "{{ results.results }}"
      when: item.stat.exists
