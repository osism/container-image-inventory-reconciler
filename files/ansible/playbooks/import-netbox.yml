---
- name: Import inventory in netbox
  connection: local
  hosts: localhost
  gather_facts: false

  collections:
    - netbox.netbox

  vars:
    netbox_default_device_role: generic-node
    netbox_default_device_type: default-device-type
    netbox_default_management_interface: Management1
    netbox_default_site: default-site
    netbox_default_status: Staged
    netbox_default_tags:
      - generic

    netbox_token: "{{ lookup('file', '/run/secrets/NETBOX_TOKEN') }}"
    netbox_url: "{{ lookup('env', 'NETBOX_API') }}"

  tasks:
    - name: Pause play until netbox is reachable from this host
      uri:
        url: "{{ netbox_url }}/api/"
        follow_redirects: none
        method: GET
      register: result
      until: result.status == 200
      retries: 720
      delay: 5

    - name: Create device
      netbox_device:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          name: "{{ item }}"
          device_role: "{{ hostvars[item]['netbox_inventory_device_role'] | default(netbox_default_device_role) }}"
          device_type: "{{ hostvars[item]['netbox_inventory_device_type'] | default(netbox_default_device_type) }}"
          site: "{{ hostvars[item]['netbox_inventory_site'] | default(netbox_default_site) }}"
          status: "{{ hostvars[item]['netbox_inventory_status'] | default(netbox_default_status) }}"
          tags: "{{ hostvars[item]['netbox_inventory_tags'] | default(netbox_default_tags) }}"
        state: present
      loop: "{{ groups['generic'] }}"
      when: "item != 'localhost'"

    - name: Create local config context
      netbox_device:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          name: "{{ item }}"
          local_context_data: "{{ lookup('file', '/inventory/host_vars/' + item + '.yml') | from_yaml }}"
      loop: "{{ groups['generic'] }}"
      when: "item != 'localhost'"

    - name: Create management interface
      netbox_device_interface:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          device: "{{ item }}"
          name: "{{ hostvars[item]['netbox_inventory_management_interface'] | default(netbox_default_management_interface) }}"
          type: virtual
          description: "Interface is managed by OSISM. Do not modify."
        state: present
      loop: "{{ groups['generic'] }}"
      when: "item != 'localhost'"

    - name: Create address
      netbox_ip_address:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          address: "{{ hostvars[item]['ansible_host'] }}"
          assigned_object:
            device: "{{ item }}"
            name: "{{ hostvars[item]['netbox_inventory_management_interface'] | default(netbox_default_management_interface) }}"
          description: "IP address is managed by OSISM. Do not modify."
        state: present
      loop: "{{ groups['generic'] }}"
      when: "item != 'localhost'"

    - name: Set primary address
      netbox_device:
        netbox_url: "{{ netbox_url }}"
        netbox_token: "{{ netbox_token }}"
        data:
          name: "{{ item }}"
          primary_ip4: "{{ hostvars[item]['ansible_host'] }}"
        state: present
      loop: "{{ groups['generic'] }}"
      when: "item != 'localhost'"
